fastlane_version '2.197.0'

#
# Métodos genéricos que podem ser usados
# com ios e android, ou que podem ser portados
# pra outros projetos
#
platform :common do 
  # Busca pelo arquivo que contem o versionCode e faz a substituicao
  def increment_android_version_number(path, version_number)
    re = /versionCode\s+(\d+)/
    s = File.read(path)
    s[re, 1] = "#{version_number}"
    f = File.new(path, 'w')
    f.write(s)
    f.close
  end

  # Busca pelo arquivo que contem o versionName e faz a substituicao
  def increment_android_version_name(path, version_name)
    re = /versionName\s+("\d+.\d+.\d+")/
    s = File.read(path)
    versionName = s[re, 1].gsub!('"','').split('.')
    if(version_name)
      s[re, 1] = "\"#{version_name}\""
    else
      s[re, 1] = "\"#{major}.#{minor}.#{patch}\""
    end
    f = File.new(path, 'w')
    f.write(s)
    f.close
  end

  # Adiciona tag de rc
  def add_tag_and_push(buildNumber, versionName, platform)
    if (buildNumber && !buildNumber.empty? && versionName && !versionName.empty?)
      add_git_tag(tag: "v#{versionName}-#{buildNumber}-#{platform}")
      push_git_tags
    end
  end
end

platform :ios do 
  # Nao conclui a lane, pois tive problema na instalacao
  # do plugin firebase_app_distr no mac m1, além disso
  # nao obtive uma conta apple pra testes
  desc 'QA Build and upload to Firebase App Distribution'
  lane :qa do
    # firebase_app_distribution(
    #   app: 'APP-ID'
    #   testers: 'TESTER-EMAILS',
    #   groups: 'TESTER-GROUP',
    #   release_notes: 'RELEASE-NOTE',
    #   firebase_cli_path: '/usr/local/bin/firebase',
    #   ipa_path: 'IPA-PATH'
    # )
  end
end 

platform :android do

  # Condiciona o bump com o parametro recebido
  def bump_android
    # build_number=999 version_name=1.1.1 fastlane ...
    buildNumber = ENV['build_number']
    if (buildNumber && !buildNumber.empty?)
      increment_android_version_number('../android/app/build.gradle', buildNumber)
    end
    versionName = ENV['version_name']
    if (versionName && !versionName.empty?)
      increment_android_version_name('../android/app/build.gradle', versionName)
    end
  end

  # Sobe pro Console Google Play
  # a faixa é internal, pois nao configurei os assets
  # e deixei como draft por nao ter uma faixa publicada
  #
  # a json_key pode ser convertida num base64 e guardada 
  # na parte de seguranca do github, gitlab etc e consumida
  # usando as ENV VAR
  # 
  # os skips sao por nao ter faixa publicada e nao querer
  # subir assets e infos de publicacao
  def upload_android
    # json_key: ENV["GOOGLE_PLAY_SERVICES_KEY"],
    # transformar em base64 e por no git keys
    upload_to_play_store(
      track: 'internal',
      release_status: 'draft',
      json_key: './keys/android/pc-api-5501818445264301136-412-187e22d96ddd.json',
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  # builda o android, usando .aab mesmo,
  # caso precise o .apk, tem uma lib que faz a extraçao
  # estou informando o diretorio pois o fastlane está 
  # no nivel do RN, e nao no projeto android
  def build_android
    gradle(task: "clean", project_dir: 'android/')
    gradle(task: "bundle", build_type: "Release", project_dir: 'android/')
  end
 
  # Lane que pega o parametro,
  # verifica se está na branch correta (master é default)
  # sobe versao, se tiver parametros
  # builda
  # faz o upload
  # adiciona tag de release
  desc 'Build and upload to Google Play'
  lane :build_rc do
    buildNumber = ENV['build_number']
    versionName = ENV['version_name']

    ensure_git_branch
    bump_android
    build_android
    upload_android

    add_tag_and_push(buildNumber, versionName, 'android')
    # avisar no slack ou outro canal
  end

  # Tive um problema na instalacao do plugin Firebase App Distribuition
  # e nao continuei buscando uma solucao, mas basicamente o plugin 
  # serviria pra subir a build no App Distribuition, mas, caso for
  # utilizar um servico como Bitrise, ele faz pela plataforma
  # 
  # desc 'QA Build and upload to Firebase App Distribution'
  # lane :build_qa do
  #   gradle(task: "clean", project_dir: 'android/')
  #   gradle(task: "bundle", build_type: "Release", project_dir: 'android/')

  #   firebase_app_distribution(
  #     #transformar em base64 pra por no git keys
  #     service_credentials_file: '../keys/android/pc-api-5501818445264301136-412-fd2448722784.json',
  #     app: '1:937485818408:android:24a80ab187472f5312f31d', #ENV['FIREBASE_APP_ID'],
  #     release_notes_file: "metadata/android/pt-BR/changelogs/default.txt",
  #     groups_file: "metadata/android/qa/groups/default.txt"
  #   )
  #   # caso nao conclua a instalacao do plugin no m1, 
  #   # migrar para o bitrise https://medium.com/@arekk/bitrise-firebase-app-distribution-step-9f9eb558fb89
  # end

end
